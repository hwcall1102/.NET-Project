@page "/order"
@using TakeawayTitans.Services
@implements IDisposable
@inject ShoppingCartService Cart
@inject HttpClient Http
@inject NavigationManager Navigation

<h3>Shopping Cart</h3>

@if (!Cart.Items.Any())
{
    <div class="text-center mt-5">
        <p class="mb-3 fs-5">Your cart is empty.</p>
        <button class="btn btn-primary" @onclick="GoToMenu">Order Now</button>
    </div>
}
else
{
    <table class="table align-middle">
        <thead class="table-light">
            <tr>
                <th>Item</th>
                <th>Base Price</th>
                <th>Qty</th>
                <th>Total</th>
                <th>Notes</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Cart.Items.ToList())
            {
                <tr @key="item.MenuItemId">
                    <td>@item.MenuItemName</td>
                    <td>$@item.Price.ToString("0.00")</td>
                    <td style="width: 140px;">
                        <div class="input-group input-group-sm">
                            <button class="btn btn-outline-secondary" @onclick="() => ChangeQuantity(item, -1)">-</button>
                            <input type="number" min="1" class="form-control text-center" value="@item.Quantity" readonly />
                            <button class="btn btn-outline-secondary" @onclick="() => ChangeQuantity(item, 1)">+</button>
                        </div>
                    </td>
                    <td>$@((item.Price * item.Quantity).ToString("0.00"))</td>
                    <td>
                        <input class="form-control form-control-sm"
                               placeholder="Add notes..."
                               @bind="item.Customization"
                               @bind:event="oninput" />
                    </td>
                    <td>
                        <button class="btn btn-sm btn-danger" @onclick="() => RemoveItem(item)">üóëÔ∏è</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <h5 class="mt-3 text-end fw-bold">
        Total: $@Cart.Total().ToString("0.00") tax
    </h5>

    <button class="btn btn-primary float-end mt-2" @onclick="CheckoutOrder">Checkout</button>
}

@code {
    protected override void OnInitialized()
    {
        Cart.OnChange += StateHasChanged; // subscribe to live updates
    }

    public void Dispose()
    {
        Cart.OnChange -= StateHasChanged; // clean up
    }

   void GoToMenu() => Navigation.NavigateTo("/menu");

    private void ChangeQuantity(TakeawayTitans.Dto.CartItemDto item, int delta)
    {
        item.Quantity = Math.Max(1, item.Quantity + delta);
        Cart.UpdateItem(item); // triggers OnChange and updates UI
    }

    private void RemoveItem(TakeawayTitans.Dto.CartItemDto item)
    {
        Cart.RemoveItem(item); // triggers OnChange
    }

    private async Task CheckoutOrder()
    {
        var response = await Http.PostAsJsonAsync("api/Orders/checkout", Cart.Items);
        if (response.IsSuccessStatusCode)
        {
            Cart.Clear(); // triggers OnChange
        }
    }
}
