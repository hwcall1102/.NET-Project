@page "/admin-order"
@rendermode InteractiveServer
@using Microsoft.EntityFrameworkCore
@using TakeawayTitans.Data
@using TakeawayTitans.Data.Models
@using System.Linq
@inject IDbContextFactory<TakeawayTitansContext> DbFactory

<PageTitle>Admin Order Management</PageTitle>
<AuthorizeView>
    <Authorized>
        <div class="page">
            <h1>Admin Order Management</h1>
            @if (orders.Count == 0)
            {
                <p class="fs-1">No orders available.</p>
            }
            else
            {
                <div class="order-container">
                    @foreach (var order in orders)
                    {
                        <OrderCard Order="order" />
                    }
                </div>
            }
        </div>
    </Authorized>
</AuthorizeView>

@code {
    private TakeawayTitansContext dbContext = default!;
    private readonly List<Order> orders = new();

    protected override async Task OnInitializedAsync()
    {
        dbContext = await DbFactory.CreateDbContextAsync();
        var loadedOrders = await dbContext.Orders
            .Include(o => o.OrderItems)
            .ThenInclude(oi => oi.MenuItem)
            .OrderByDescending(o => o.CreatedAt)
            .ToListAsync();

        orders.AddRange(loadedOrders);
    }

    
}
